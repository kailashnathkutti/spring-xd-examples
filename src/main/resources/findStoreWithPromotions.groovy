@Grab(group='org.codehaus.groovy.modules.http-builder', module='http-builder', version='0.7')
import java.util.concurrent.ConcurrentHashMap;

import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.ContentType.URLENC

@Grapes(@Grab(group='com.rabbitmq', module='amqp-client', version='3.0.1'))

import com.rabbitmq.client.*

import com.rabbitmq.client.*

/*
 * This module 
 * 1) connect to Rabbit mq to post user's lat,log which will be later consumed by Node.js web ui
 * 2) Posts all details about user into a http port which can be consumed by other app. Not implemented yet
 */
def factory = new ConnectionFactory();
factory.setUsername("guest");
factory.setPassword("guest");
factory.setVirtualHost("/");
factory.setHost("localhost")
factory.setPort(5672)



//storeIdLocCodeMap=["12879":"BDKJTY","20301":"BDKRES","55645":"BKTPJG","21887":"BTANIC","2341":"BTPLZA","8977":"CHGIAP","40535":"CHGIPT","49814":"CHGIT2","16748":"CHJMES","30761":"CHOMP2","55139":"CLARKE","8350":"CLIFRD","33834":"CSCLUB","10031":"CWYMAS","50372":"CWYSGP","59369":"ECLAGN","19105":"FABER ","32035":"FAREST","59100":"FERRY ","17033":"HAWPAR","49261":"HEEREN","12157":"HOLNDV","43923":"HORSBG","32617":"HOSALV","9871":"HOSALX","62063":"HOSMTE","20284":"HOSNUH","27575":"HOSSGH","13190":"HOSTPY","6400":"HOSTTS","13831":"ISTANA","31334":"JELITA","26577":"JGBIRD","38860":"KINGAL","21637":"KJIDAM","36234":"KLGKFC","11975":"KUSU","24251":"LAUPAS","29875":"LAZRUS","49875":"LIDO","42745":"LK2HWY","36587":"LK2MAS","43817":"LK2SGP","13826":"MAINLB","4999":"MCRTIE","5916":"MCSEMB","44933":"MOSRNG","4204":"MRNASQ","12894":"MRNSTH","36625":"MRTADM","23614":"MRTALJ","51966":"MRTAMK","9692":"MRTBAY","10643":"MRTBDK","28304":"MRTBDL","21386":"MRTBGS","40173":"MRTBLY","407":"MRTBNV","19325":"MRTBSN","13817":"MRTBTK","23657":"MRTCCK","32274":"MRTCMT","13310":"MRTCMW","39536":"MRTCTH","51476":"MRTDBG","20511":"MRTDP1","25541":"MRTDP2","6842":"MRTDP3","25037":"MRTENS","40037":"MRTGBK","38404":"MRTGDN","22765":"MRTJGE","4769":"MRTKBG","21646":"MRTKJI","1148":"MRTKLG","55385":"MRTKTB","12126":"MRTLKE","1253":"MRTLVD","6753":"MRTMAR","41655":"MRTNOV","22632":"MRTNWT","43561":"MRTORD","10421":"MRTOTR","24091":"MRTPYL","13641":"MRTQTN","28576":"MRTRAF","39466":"MRTRED","26965":"MRTRIS","61259":"MRTSEM","17076":"MRTSMI","19555":"MRTSMT","46498":"MRTTGB","31387":"MRTTGP","46262":"MRTTNM","23354":"MRTTPN","7733":"MRTTPY","6683":"MRTWDL","50544":"MRTYCK","54730":"MRTYSN","26448":"MRTYWT","63444":"NACITY","29856":"NEOTEW","25355":"NESTAD","56125":"NRTHPT","36075":"NTUC","58294":"NTUGPS","43413":"NUSSGP","18985":"NWTCIR","31987":"NYPSEG","28112":"NYPSIT","59839":"OBS-SG","18364":"ORCHAD","63534":"PA-ECP","59794":"PARADZ","4656":"PDNRES","22069":"PGLJTY","41871":"PRATA ","28188":"PRCLWR","48025":"PRCUPR","51232":"PRISPK","55207":"PUAKA ","62378":"QNSTWN","2813":"RAGTME","56452":"RFLITE","57016":"SBWGED","37997":"SELRES","43681":"SERENE","25439":"SGPZOO","36956":"SHWTWR","29191":"SICC","23934":"SIMLMT","15016":"SNTOSA","55076":"SRMEND","10896":"STJOHN","14069":"TCS ","48399":"THMSON","22333":"TIMAH ","12420":"TPECTR","33964":"TPMALL","24686":"TUASJT","20520":"TURFCB","42738":"WARMEM","29825":"WCPIER","38195":"WESTIN","25078":"WTCSGP","1627":"YSNDAM","45158":"YSNRES"]
storeIdLocCodeMap=[204:"BDKJTY",541:"BDKRES",2551:"BKTPJG",2554:"BTANIC",2722:"BTPLZA",5425:"CHGIAP",6396:"CHGIPT",6542:"CHGIT2",6958:"CHJMES",10896:"CHOMP2",12220:"CLARKE",12226:"CLIFRD",37869:"CSCLUB",38190:"CWYMAS",43561:"CWYSGP",50397:"ECLAGN",59100:"FABER ",59176:"FAREST",63136:"FERRY ",63139:"HAWPAR",63283:"HEEREN",12157:"HOLNDV",43923:"HORSBG",32617:"HOSALV",9871:"HOSALX",62063:"HOSMTE",20284:"HOSNUH",27575:"HOSSGH",13190:"HOSTPY",6400:"HOSTTS",13831:"ISTANA",31334:"JELITA",26577:"JGBIRD",38860:"KINGAL",21637:"KJIDAM",36234:"KLGKFC",11975:"KUSU",24251:"LAUPAS",29875:"LAZRUS",49875:"LIDO",42745:"LK2HWY",36587:"LK2MAS",43817:"LK2SGP",13826:"MAINLB",4999:"MCRTIE",5916:"MCSEMB",44933:"MOSRNG",4204:"MRNASQ",12894:"MRNSTH",36625:"MRTADM",23614:"MRTALJ",51966:"MRTAMK",9692:"MRTBAY",10643:"MRTBDK",28304:"MRTBDL",21386:"MRTBGS",40173:"MRTBLY",407:"MRTBNV",19325:"MRTBSN",13817:"MRTBTK",23657:"MRTCCK",32274:"MRTCMT",13310:"MRTCMW",39536:"MRTCTH",51476:"MRTDBG",20511:"MRTDP1",25541:"MRTDP2",6842:"MRTDP3",25037:"MRTENS",40037:"MRTGBK",38404:"MRTGDN",22765:"MRTJGE",4769:"MRTKBG",21646:"MRTKJI",1148:"MRTKLG",55385:"MRTKTB",12126:"MRTLKE",1253:"MRTLVD",6753:"MRTMAR",41655:"MRTNOV",22632:"MRTNWT",43561:"MRTORD",10421:"MRTOTR",24091:"MRTPYL",13641:"MRTQTN",28576:"MRTRAF",39466:"MRTRED",26965:"MRTRIS",61259:"MRTSEM",17076:"MRTSMI",19555:"MRTSMT",46498:"MRTTGB",31387:"MRTTGP",46262:"MRTTNM",23354:"MRTTPN",7733:"MRTTPY",6683:"MRTWDL",50544:"MRTYCK",54730:"MRTYSN",26448:"MRTYWT",63444:"NACITY",29856:"NEOTEW",25355:"NESTAD",56125:"NRTHPT",36075:"NTUC",58294:"NTUGPS",43413:"NUSSGP",18985:"NWTCIR",31987:"NYPSEG",28112:"NYPSIT",59839:"OBS-SG",18364:"ORCHAD",63534:"PA-ECP",59794:"PARADZ",4656:"PDNRES",22069:"PGLJTY",41871:"PRATA ",28188:"PRCLWR",48025:"PRCUPR",51232:"PRISPK",55207:"PUAKA ",62378:"QNSTWN",2813:"RAGTME",56452:"RFLITE",57016:"SBWGED",37997:"SELRES",43681:"SERENE",25439:"SGPZOO",36956:"SHWTWR",29191:"SICC",23934:"SIMLMT",15016:"SNTOSA",55076:"SRMEND",10896:"STJOHN",14069:"TCS ",48399:"THMSON",22333:"TIMAH ",12420:"TPECTR",33964:"TPMALL",24686:"TUASJT",20520:"TURFCB",42738:"WARMEM",29825:"WCPIER",38195:"WESTIN",25078:"WTCSGP",1627:"YSNDAM",45158:"YSNRES"]


storeIdLatLongMap=["545":"1.30793,103.9413","814":"1.34199,103.9253","1814":"1.37879,103.7652","2150":"1.30946,103.8172","3298":"1.33865,103.7787","4121":"1.3604,103.9894","4304":"1.39095,103.9879","5109":"1.35574,103.9887","5709":"1.29465,103.852","5967":"1.36436,103.8662","6093":"1.29,103.8465","6548":"1.28234,103.8538","7847":"1.39228,103.9857","8259":"1.45784,103.7674","8356":"1.44772,103.7706","9157":"1.30657,103.933","9368":"1.27373,103.8177","9720":"1.30627,103.8339","9779":"1.31454,103.9889","9854":"1.28259,103.7843","10260":"1.30223,103.8376","11366":"1.31087,103.7951","11643":"1.329,104.3988","12338":"1.34322,103.8403","13183":"1.28713,103.801","13229":"1.30567,103.8347","13675":"1.29498,103.7832","13742":"1.28035,103.836","14417":"1.3369,103.8416","14551":"1.32269,103.8463","15304":"1.30545,103.8433","15852":"1.31791,103.7861","15968":"1.3196,103.7065","16502":"1.33693,103.7794","16857":"1.43844,103.7403","17119":"1.30499,103.8814","17922":"1.22336,103.8626","17959":"1.28094,103.8503","19504":"1.2228,103.8546","19653":"1.30557,103.8317","19797":"1.36093,103.6197","20640":"1.37686,103.5993","21317":"1.34726,103.6363","21359":"1.29522,103.8487","21840":"1.345,103.8242","21853":"1.42691,103.8257","22232":"1.3512,103.8066","26232":"1.29191,103.8579","26245":"1.2804,103.8665","26504":"1.44086,103.8004","27264":"1.31637,103.8827","27863":"1.37,103.8496","27909":"1.27629,103.8542","29063":"1.32405,103.9302","30988":"1.34081,103.8467","31733":"1.30006,103.8559","32197":"1.33948,103.7058","32943":"1.30726,103.7903","33361":"1.35059,103.8481","33671":"1.34924,103.7495","33783":"1.38505,103.7443","34645":"1.31493,103.7653","35970":"1.30245,103.7985","38569":"1.29282,103.8525","39138":"1.29833,103.8467","39671":"1.35666,103.8534","39747":"1.33093,103.9555","40352":"1.33083,103.7612","40431":"1.3197,103.9033","42011":"1.35955,103.7518","42555":"1.34209,103.7326","42919":"1.33237,103.7424","43316":"1.32107,103.9129","46463":"1.42555,103.7618","46465":"1.31154,103.8718","47528":"1.41761,103.8333","47596":"1.34455,103.721","47768":"1.30752,103.8632","48750":"1.43243,103.7733","48972":"1.32038,103.8438","50114":"1.3126,103.8378","50978":"1.30442,103.8323","51229":"1.28168,103.839","53295":"1.31809,103.8929","53974":"1.29419,103.8065","55738":"1.28397,103.8521","57266":"1.28971,103.8168","57333":"1.37303,103.9491","57803":"1.44883,103.8206","57925":"1.34371,103.9531","57954":"1.29994,103.8387","59516":"1.28639,103.8268","61162":"1.27696,103.8459","61861":"1.32749,103.947","62076":"1.35372,103.9449","62189":"1.33186,103.8478","63043":"1.43691,103.7862","63556":"1.38166,103.8448","63695":"1.42919,103.8347","63779":"1.39809,103.748","545":"1.30322,103.8346","814":"1.42147,103.704","1814":"1.30432,103.8746","2150":"1.43006,103.8361","3298":"1.37636,103.9553","4121":"1.34834,103.6817","4304":"1.29909,103.7711","5109":"1.31407,103.8393","5709":"1.37911,103.8485","5967":"1.37935,103.8502","6093":"1.41953,103.9281","6548":"1.30143,103.8368","7847":"1.3129,103.9569","8259":"1.29998,103.849","8356":"1.31067,103.7435","9157":"1.42089,103.9104","9368":"1.39575,103.8725","9720":"1.37026,103.8226","9779":"1.36833,103.8042","9854":"1.38345,103.9465","10260":"1.40786,103.9587","11366":"1.2987,103.8043","11643":"1.40325,103.8185","12338":"1.15962,103.7404","13183":"1.46275,103.8386","13229":"1.39934,103.8","13675":"1.32231,103.8136","13742":"1.40352,103.7934","14417":"1.29642,103.8568","14551":"1.35948,103.8198","15304":"1.30413,103.8548","15852":"1.25088,103.8341","15968":"1.44547,103.7077","16502":"1.21982,103.8492","16857":"1.33782,103.834","17119":"1.35431,103.8308","17922":"1.35435,103.7769","17959":"1.35537,103.9428","19504":"1.35285,103.9447","19653":"1.29124,103.6186","19797":"1.3396,103.7947","20640":"1.41576,103.7581","21317":"1.29565,103.7628","21359":"1.29374,103.8534","21840":"1.26433,103.8204","21853":"1.42387,103.8599","22232":"1.40621,103.8446"];
payload="204"
//split = payload.tokenize(",")
def areaCode = payload;
//def phoneNo = split[1];

def storeIdRet = storeIdLocCodeMap[areaCode]
println(storeIdRet);
def storeLatLong = storeIdLatLongMap[areaCode];
if (storeLatLong!= null)
{
	Connection conn = factory.newConnection();
	def channel = conn.createChannel();
	
	String exchangeName = "cdr_exchange"
	String routingKey = "cdr_routing_key"
	String queueName = "cdr_ui_queue"
	
	channel.queueBind(queueName, exchangeName, "#");
	println " Queue: ${queueName} "
	def splittedLatLong=storeLatLong.tokenize(",")
	def regUIDataset ='[['+splittedLatLong[0]+','+ splittedLatLong[1]+']]'
	println(regUIDataset);
	channel.basicPublish(exchangeName, routingKey, MessageProperties.TEXT_PLAIN,
		regUIDataset.getBytes() );
	channel.close()
	conn.close()
}
def http = new HTTPBuilder( 'http://localhost:8001' )
def returnDataset = areaCode +"---->,"+storeIdRet
def postBody = [areaCd: areaCode, phoneNumber: phoneNo, storeCode:storeIdRet] // will be url-encoded
http.post( path: '/', body: postBody,
requestContentType: URLENC ) { resp ->
	println (returnDataset)
	//println "POST Success: ${resp.statusLine}"
	//assert resp.statusLine.statusCode == 201
	//			}
	return returnDataset
}
